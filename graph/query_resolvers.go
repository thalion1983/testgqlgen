package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.41

import (
	"context"
	"testgqlgen/graph/generated"
	"testgqlgen/graph/model"
)

// Users is the resolver for the users field.
func (r *queryResolver) Users(ctx context.Context) ([]*model.User, error) {
	if len(r.UserList.List) == 0 {
		return nil, nil
	}
	return r.UserList.List, nil
}

// App is the resolver for the app field.
func (r *queryResolver) App(ctx context.Context, id string) (*model.App, error) {
	for _, app := range r.AppList {
		if app.ID == id {
			return app, nil
		}
	}
	return nil, nil
}

// Apps is the resolver for the apps field.
func (r *queryResolver) Apps(ctx context.Context) ([]*model.App, error) {
	if len(r.AppList) == 0 {
		return nil, nil
	}
	return r.AppList, nil
}

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
